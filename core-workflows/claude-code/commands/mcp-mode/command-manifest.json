{
  "commands": [
    {
      "name": "architect-mcp",
      "description": "Create comprehensive feature specifications with intelligent grouping and relationship detection",
      "usage": "/architect-mcp \"Feature description\"",
      "category": "specification",
      "version": "1.0.0",
      "author": "SpecGen MCP Integration",
      "keywords": ["architecture", "specification", "mcp", "database", "planning"],
      "requirements": {
        "mcp_server": "specgen-mcp",
        "database": "sqlite",
        "node_version": ">=16.0.0"
      },
      "examples": [
        "/architect-mcp \"User authentication system with JWT tokens\"",
        "/architect-mcp \"Dashboard component for displaying analytics\"",
        "/architect-mcp \"MCP integration for external API synchronization\""
      ],
      "output_format": {
        "success": "spec://ID with detected grouping and relationships",
        "error": "Clear error message with suggested corrections"
      }
    },
    {
      "name": "engineer-mcp", 
      "description": "Execute implementation tasks from database-stored specifications with real-time progress tracking",
      "usage": "/engineer-mcp spec://123 OR /engineer-mcp \"task description\"",
      "category": "implementation",
      "version": "1.0.0", 
      "author": "SpecGen MCP Integration",
      "keywords": ["implementation", "engineering", "mcp", "database", "execution"],
      "requirements": {
        "mcp_server": "specgen-mcp",
        "database": "sqlite", 
        "node_version": ">=16.0.0"
      },
      "examples": [
        "/engineer-mcp spec://123",
        "/engineer-mcp \"implement user authentication\"",
        "/engineer-mcp spec://456"
      ],
      "output_format": {
        "success": "Layer-by-layer progress updates with completion summary",
        "error": "Specific failure point with recovery suggestions"
      }
    }
  ],
  "integration": {
    "mcp_tools": [
      "create_spec_with_grouping",
      "search_related_specs", 
      "get_spec",
      "update_spec",
      "update_spec_relationships",
      "list_specs"
    ],
    "database_tables": [
      "specs"
    ],
    "file_patterns": [
      "*.md",
      "SPEC-*.md"
    ]
  },
  "configuration": {
    "project_detection": [
      "package.json",
      ".git",
      "pyproject.toml", 
      "Cargo.toml",
      ".specgen"
    ],
    "database_path": ".specgen/specgen.sqlite",
    "mcp_server_timeout": 5000,
    "max_related_specs": 10
  }
}